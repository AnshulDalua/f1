name: Deploy ICS Files to Cloudflare Workers

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      site:
        type: choice
        description: Which site?
        options:
        - f1
        - f2
        - f3
        - fe
        - indycar
        - motogp
        - wseries
        - extremee
  workflow_call:
    inputs:
      site:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
        
        
      - name: Test
        run: |
          echo "${{github.event.inputs.site}}"
      
      
#       - name: Cache node modules
#         uses: actions/cache@v2
#         env:
#           cache-name: cache-node-modules
#         with:
#           # npm cache files are stored in `~/.npm` on Linux/macOS
#           path: ~/.npm
#           key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-build-${{ env.cache-name }}-
#             ${{ runner.os }}-build-
#             ${{ runner.os }}-
#     
#       - name: Install Dependencies
#         run: |
#           npm i @cloudflare/wrangler
#           npm i ics
#           npm i dayjs
#           
#       - name: Generate Specific Calendars
#         run: |
#           sudo node build/generate-calendars.js ${{github.event.inputs.site}}
# 
#       - name: Publish to Cloudflare Workers Sites
#         run: |
#           mkdir -p ~/.wrangler/config/
#           echo "api_token=\"${CF_API_TOKEN}\"" > ~/.wrangler/config/default.toml
#           yarn wrangler publish --env ${{github.event.inputs.site}}
#         env:
#           CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
#           CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
#           CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
