name: Deploy ICS Files to Cloudflare Workers

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # Only triggers if _db is modified within the Push or PR.
  # push:
  #   branches: [ main ]
  #   paths:
  #     - '_db/**'
  # pull_request:
  #   branches: [ main ]
  #   paths:
  #     - '_db/**'
      
  workflow_dispatch:
    inputs:
      site:
        type: choice
        description: Which site?
        options:
        - all
        - f1
        - f2
        - f3
        - fe
        - indycar
        - motogp
        - wseries
        - extremee

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
    
      - name: Install Dependencies
        run: |
          npm i @cloudflare/wrangler
          npm i ics
          npm i dayjs

      # - name: Generate All Calendars
      #   if: !github.event.inputs.site
      #   run: |
      #     sudo node build/generate-calendars.js
          
      - name: Generate Specific Calendars
        run: |
          sudo node build/generate-calendars.js ${github.event.inputs.site}

      - name: Publish to Cloudflare Workers Sites
        run: |
          mkdir -p ~/.wrangler/config/
          echo "api_token=\"${CF_API_TOKEN}\"" > ~/.wrangler/config/default.toml
          yarn wrangler publish --env production
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
